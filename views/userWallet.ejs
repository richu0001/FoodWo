<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wallet</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>
    <style>
        /* Hide the default scrollbar */
        .overflow-x-scroll::-webkit-scrollbar {
            display: none;
        }

        /* Define the scrollbar track (optional) */
        .overflow-x-scroll::-webkit-scrollbar-track {
            background: transparent;
            /* You can customize the track's appearance */
        }

        /* Define the scrollbar thumb (optional) */
        .overflow-x-scroll::-webkit-scrollbar-thumb {
            background: transparent;
            /* You can customize the thumb's appearance */
        }

        .text-ellipsis {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>
</head>

<body>
    <%- include('userNavbar')%>
        <section class="px-5 py-2 min-h-screen">
            <div class="flex justify-center items-center mt-10 py-5">
                <div class="w-96 mx-5">
                    <h1 class="text-4xl font-bold">Let's Make it easy by,<br>
                        Using <span class="text-orange-500">FoodWo</span> Wallet</h1>
                    <h3 class="mt-5 text-gray-500">FoodWo Wallet allows you to make instant payments for purchasing food items without any
                        transactions issues caused by the banks</h3>
                </div>
                <div class="px-5 py-3 mx-5 flex flex-col justify-center items-center">
                    <p class="text-5xl font-semibold my-3"><span class="text-gray-500">Balance</span> <span class="text-orange-500">â‚¹</span>2500</p>
                    <div class="flex justify-center items-center">
                        <div class="px-2 py-1 border border-orange-500 rounded mx-2 my-2 text-orange-500 hover:text-white hover:bg-orange-500 cursor-pointer amt">500</div>
                        <div class="px-2 py-1 border border-orange-500 rounded mx-2 my-2 text-orange-500 hover:text-white hover:bg-orange-500 cursor-pointer amt">1000</div>
                        <div class="px-2 py-1 border border-orange-500 rounded mx-2 my-2 text-orange-500 hover:text-white hover:bg-orange-500 cursor-pointer amt">2000</div>
                        <div class="px-2 py-1 border border-orange-500 rounded mx-2 my-2 text-orange-500 hover:text-white hover:bg-orange-500 cursor-pointer amt">3000</div>
                    </div>
                    <button class="px-3 py-2 rounded bg-orange-500 text-white hover:bg-orange-600 my-5" onclick="addMoney(event)">Add Money</button>
                </div>
            </div>
        </section>
        <%- include('userFooter')%>

        <script>
            const amount = document.querySelectorAll('.amt');
            let selectedAmt;

            amount.forEach((amt)=>{
                amt.addEventListener('click',()=>{
                    if(amt.classList.contains('bg-orange-700')){
                        amt.classList.remove('bg-orange-700')
                        amt.classList.remove('text-white')
                        amt.classList.add('text-orange-500')
                    }else{
                        amt.classList.add('bg-orange-700')
                        amt.classList.remove('text-orange-500')
                        amt.classList.add('text-white')
                    }
                    selectedAmt = parseInt(amt.innerText)
                    console.log(selectedAmt)
                })
            })

            async function addMoney(event){
                try {
                            const orderUrl = '/user/orders'
                            const paying = await axios.post(orderUrl, { amount: totalAmount })
                            console.log(paying)
                            initPayment(paying.data)
                        } catch (error) {
                            console.log(error)
                        }
            }
        </script>
</body>

</html>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodWo - Products</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>
</head>

<body class="bg-[#EAEFF8]">
    <!-- Navigation -->
    <%- include('adminNavbar') %>

        <div id="alert" class="transition delay-150 ease-linear hidden py-4 px-3 bg-red-400 text-white text-center"><i
                class="fa-solid fa-triangle-exclamation text-xl"></i> We are facing some issues.Please try later.</div>
        <section class="px-5 py-3">

            <div class="">

                <div class="md:w-1/2 md:px-4 mx-auto">
                    <!-- image upload -->
                    <label for="doc"
                        class="md:w-2/3 md:mx-auto bg-orange-100 rounded h-72 w-full text-center flex flex-col justify-center items-centerd cursor-pointer">
                        <img src="#" class="w-full h-full hidden rounded" alt="" id="imagetag">
                        <div class="text-orange-500 text-6xl my-3" id="userIcon"><i class="fa-regular fa-user"></i></div>
                        <input type="file" name="" placeholder="upload profile" id="doc" class="" hidden>
                        <span id="uploadtext">Upload Product Image </span>
                    </label>
    
                </div>
                <div class="md:w-1/2 md:px-4 mx-auto">
                    <!-- Input Fields -->
                    <form action="">
                        <div class="flex flex-col my-2">
                            <label for="">Product Name</label>
                            <input type="text" name="" maxlength="20" id="productName" placeholder="Product Name"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Description</label>
                            <textarea type="text" name="" id="description" placeholder="Product Description" cols="3" rows="5"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500"></textarea>
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Price</label>
                            <input type="tel" maxlength="4" name="" id="productPrice" placeholder="Product Price"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Type</label>
                            <select name="" id="productType"  class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500" value="none">None</option>
                                <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500" value="kg">Per Kilogram(/kg)</option>
                                <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500" value="plate">Per Plate</option>
                            </select>
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Category</label>
                            <select name="" id="category"  class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500" value="none">None</option>
                                <% if(data){ data.forEach((cat)=>{ %>
                                <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500" value="<%=cat.category %>"><%=cat.category %></option>
                                <% }) } %>
                            </select>
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Sold</label>
                            <input type="text" disabled name="" id="sold" placeholder="" value="0"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">In Stock</label>
                            <input type="number" name="" id="inStock" autocomplete="new-password"
                                placeholder="Number of stock"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="my-8 text-center">
                            <button type="submit" onclick="handleProductUpload(event)"
                                class="bg-orange-500 rounded-full py-2 px-6 md:px-6 text-white text-xl md:text-xl">Add to stock</button>
                        </div>
                        <div class="md:w-1/2 relative flex justify-center items-center mx-auto mb-5">
                            <div id="toast"
                                class="transition duration-[0.5s] md:w-80 bg-orange-500 py-5 px-3 hidden ease-linear rounded-md text-center text-white">
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </section>
        <!-- Footer -->
        <%- include('adminFooter') %>

        <script>
             let baseImage = "";
        // Image Details
        const image = document.getElementById('doc');
        const imagetag = document.getElementById('imagetag');
        const uploadtext = document.getElementById('uploadtext');
        const userIcon = document.getElementById('userIcon');

        const toast = document.getElementById('toast');

        image.addEventListener('change', async (event) => {
            const file = event.target.files[0];
            if (file) {
                baseImage = await ImagetoBase64(file);
                imagetag.style.display = "block";
                userIcon.style.display = "none";
                uploadtext.style.display = "none";
                imagetag.setAttribute("src", baseImage);
            }
        });

        async function ImagetoBase64(file) {
            const reader = new FileReader();
            reader.readAsDataURL(file);

            return new Promise((resolve, reject) => {
                reader.onload = () => resolve(reader.result);
                reader.onerror = err => reject(err);
            });
        }

        async function handleProductUpload(event) {
            event.preventDefault();
            //User Details
            const productName = document.getElementById('productName').value;
            const description = document.getElementById('description').value;
            const productPrice = document.getElementById('productPrice').value;
            const productType = document.getElementById('productType').value;
            const category = document.getElementById('category').value;
            // const sold = document.getElementById('sold').value;
            const inStock = document.getElementById('inStock').value;

          

            if (!productName || !description || !productPrice || !productType || !category || !inStock || !baseImage) {
                toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> All fields are required.</span>`;
                console.log('not here');
                toast.classList.remove("hidden");
                toast.classList.remove("translate-y-96");
                setTimeout(() => {
                    toast.classList.add("hidden");
                    toast.classList.add("translate-y-96");
                }, 3000)
            }
            else {
                const formData = {
                    productName: productName,
                    description: description,
                    productPrice: productPrice,
                    productType: productType,
                    category:category,
                    sold: 0,
                    inStock:inStock,
                    baseImage:baseImage,
                }
                console.log('formdata :: ',formData)

                const productData = await JSON.stringify(formData);
                try {
                    // Send a POST request to the server using async/await
                    const response = await fetch(`/admin/addproduct`, {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json",
                            // 'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: productData,
                    });
                    if (!response.ok) {
                        // Handle the case where the server returns an error
                        // throw new Error(`Server responded with status: ${response.status}`);
                        const data = await response.json();
                        console.log("DAta ::  ", data);
                        if (data.failed) {
                            toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.failed}</span>`;
                            toast.classList.remove("hidden");
                            toast.classList.remove("translate-y-96");
                            setTimeout(() => {
                                toast.classList.add("hidden");
                                toast.classList.add("translate-y-96");
                            }, 3000);
                        }

                    }
                    if (response.ok) {
                        window.location.href = "/admin/products"
                    }



                    // Handle the server's response here (e.g., display a success message or handle errors)
                    // console.log("data from back : ",data);
                } catch (error) {
                    // Handle any network, request, or other errors here
                    console.error(error);
                }
            }
        }
        </script>
</body>

</html>
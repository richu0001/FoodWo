<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FoodWo - Products</title>
    <link href="/public/css/output.css" rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="/public/images/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/public/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/public/images/favicon-16x16.png">
    <script src="https://kit.fontawesome.com/70218ce737.js" crossorigin="anonymous"></script>
</head>

<body class="bg-[#EAEFF8]">
    <!-- Navigation -->
    <%- include('adminNavbar') %>

        <div id="alert" class="transition delay-150 ease-linear hidden py-4 px-3 bg-red-400 text-white text-center"><i
                class="fa-solid fa-triangle-exclamation text-xl"></i> We are facing some issues.Please try later.</div>
        <section class="px-5 py-3">

            <div class="">
                <div class="md:w-1/2 relative flex justify-center items-center mx-auto mb-5">
                    <div id="toast"
                        class="transition duration-[0.5s] md:w-80 bg-orange-500 py-5 px-3 hidden ease-linear rounded-md text-center text-white">
                    </div>
                </div>

                <div class="flex flex-col md:flex-row ">
                    <!-- Input Fields -->
                    <form class="md:w-1/2" action="/admin/addproduct" method="post" enctype="multipart/form-data">
                        <div class="w-full flex flex-col my-2">
                            <label for="mainImage">Main Image</label>
                            <input type="file" name="mainimage" id="mainImage" accept="image/*"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="w-full flex flex-col my-2">
                            <label for="relatedImages">Related Images</label>
                            <input type="file" name="relatedimages" id="relatedImages" accept="image/*" maxlength="4"
                                multiple="multiple"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Product Name</label>
                            <input type="text" name="productName" maxlength="20" id="productName"
                                placeholder="Product Name"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Description</label>
                            <textarea type="text" name="description" id="description" placeholder="Product Description"
                                cols="3" rows="5"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500"></textarea>
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Price</label>
                            <input type="tel" maxlength="4" name="productPrice" id="productPrice"
                                placeholder="Product Price"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Type</label>
                            <select name="productType" id="productType"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                    value="none">None</option>
                                <% if(types){ types.forEach((type)=>{ %>
                                    <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                        value="<%=type.productType%>">
                                        <%=type.productType%>
                                    </option>
                                    <% }) } %>
                            </select>
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Category</label>
                            <select name="category" id="category"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                                <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                    value="none">None</option>
                                <% if(data){ data.forEach((cat)=>{ %>
                                    <option class="px-2  py-2 rounded outline-orange-500 border border-orange-500"
                                        value="<%=cat.category %>">
                                        <%=cat.category %>
                                    </option>
                                    <% }) } %>
                            </select>
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">Sold</label>
                            <input type="text" disabled name="sold" id="sold" placeholder="" value="0"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="flex flex-col my-2">
                            <label for="">In Stock</label>
                            <input type="number" name="inStock" id="inStock" autocomplete="new-password"
                                placeholder="Number of stock"
                                class="px-2 placeholder:px-2 py-2 rounded outline-orange-500 border border-orange-500">
                        </div>
                        <div class="my-8 text-center">
                            <button type="submit" onclick="handleProductUpload(event)"
                                class="bg-orange-500 rounded-full py-2 px-6 md:px-6 text-white text-xl md:text-xl">Add
                                to stock</button>
                        </div>

                    </form>

                    <div class="md:w-1/2 bg-orange-500 py-4 px-5 my-5 md:my-0 md:mx-5 rounded-xl text-white">
                        <h1 class="text-xl font-bold my-3">Image Preview</h1>
                        <div>
                            <h3 class="font-semibold my-3">Main Image</h3>
                            <div class="w-48 h-48" id="mainImageContainer">

                            </div>
                        </div>
                        <div>
                            <h3 class="font-semibold my-3">Related Images</h3>
                            <div id="relatedImagesPreview" class="flex flex-wrap justify-between items-center">

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </section>
        <!-- Footer -->
        <%- include('adminFooter') %>

            <script>


                async function handleProductUpload(event) {
                    //User Details
                    const productName = document.getElementById('productName').value;
                    const description = document.getElementById('description').value;
                    const productPrice = document.getElementById('productPrice').value;
                    const productType = document.getElementById('productType').value;
                    const category = document.getElementById('category').value;
                    // const sold = document.getElementById('sold').value;
                    const inStock = document.getElementById('inStock').value;
                    const toast = document.getElementById('toast');




                    if (!productName || !description || !productPrice || !productType || !category || !inStock) {
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> All fields are required.</span>`;
                        toast.classList.remove("hidden");
                        toast.classList.remove("translate-y-96");
                        setTimeout(() => {
                            toast.classList.add("hidden");
                            toast.classList.add("translate-y-96");
                        }, 3000)
                    } else if (mainImageInput.files.length < 1) {
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Product Main Image is required.</span>`;
                        toast.classList.remove("hidden");
                        toast.classList.remove("translate-y-96");
                        setTimeout(() => {
                            toast.classList.add("hidden");
                            toast.classList.add("translate-y-96");
                        }, 3000)
                    }
                    else if (relatedImagesInput.files.length) {
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> Product Related Images are required.</span>`;
                        toast.classList.remove("hidden");
                        toast.classList.remove("translate-y-96");
                        setTimeout(() => {
                            toast.classList.add("hidden");
                            toast.classList.add("translate-y-96");
                        }, 3000)
                    }
                    else {
                        const formData = {
                            productName: productName,
                            description: description,
                            productPrice: productPrice,
                            productType: productType,
                            category: category,
                            sold: 0,
                            inStock: inStock,
                        }
                        console.log('formdata :: ', formData)

                        // const productData = await JSON.stringify(formData);
                        // try {
                        //     // Send a POST request to the server using async/await
                        //     const response = await fetch(`/admin/addproduct`, {
                        //         method: 'POST',
                        //         headers: {
                        //             "Content-Type": "application/json",
                        //             // 'Content-Type': 'application/x-www-form-urlencoded',
                        //         },
                        //         body: productData,
                        //     });
                        //     if (!response.ok) {
                        //         // Handle the case where the server returns an error
                        //         // throw new Error(`Server responded with status: ${response.status}`);
                        //         const data = await response.json();
                        //         console.log("DAta ::  ", data);
                        //         if (data.failed) {
                        //             toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i> ${data.failed}</span>`;
                        //             toast.classList.remove("hidden");
                        //             toast.classList.remove("translate-y-96");
                        //             setTimeout(() => {
                        //                 toast.classList.add("hidden");
                        //                 toast.classList.add("translate-y-96");
                        //             }, 3000);
                        //         }

                        //     }
                        //     if (response.ok) {
                        //         window.location.href = "/admin/products"
                        //     }



                        //     // Handle the server's response here (e.g., display a success message or handle errors)
                        //     // console.log("data from back : ",data);
                        // } catch (error) {
                        //     // Handle any network, request, or other errors here
                        //     console.error(error);
                        // }
                    }
                }

                // Get references to HTML elements
                const mainImageInput = document.querySelector('input[name="mainimage"]');
                const relatedImagesInput = document.querySelector('input[name="relatedimages"]');
                const mainImagePreview = document.getElementById('mainImagePreview');
                const relatedImagesPreview = document.getElementById('relatedImagesPreview');


                function removeImage(event) {
                    const imageContainerId = event.target.id; // Get the ID of the clicked button

                    // Find the corresponding image container by its ID
                    const imageContainer = document.getElementById(imageContainerId);

                    if (imageContainer) {
                        // Remove the image container from the relatedImagesPreview
                        relatedImagesPreview.removeChild(imageContainer);

                        // Create a new FileList without the removed file
                        const newFilesList = new DataTransfer();
                        for (let i = 0; i < relatedImagesInput.files.length; i++) {
                            if (i !== parseInt(imageContainerId) - 1) {
                                newFilesList.items.add(relatedImagesInput.files[i]);
                            }
                        }

                        // Update the input element with the new FileList
                        relatedImagesInput.files = newFilesList.files;
                        console.log('new one : ', relatedImagesInput.files);
                    }
                }



                // Add event listeners to the file input fields
                mainImageInput.addEventListener('change', () => {
                    if (mainImageInput.files) {
                        const mainImageContainer = document.getElementById('mainImageContainer');
                        mainImageContainer.innerHTML = `
<img id="imgElement" class="w-full h-full object-cover rounded" src="${URL.createObjectURL(mainImageInput.files[0])}" alt="mainImage">`;
                    }
                });

                relatedImagesInput.addEventListener('change', () => {
                    // Clear previous previews
                    // relatedImagesPreview.innerHTML = '';
                    console.log(relatedImagesInput.files);
                    // Display previews for related images
                    if (relatedImagesInput.files.length > 4) {
                        toast.innerHTML = `<span id="toastMessage" class="text-sm"><i class="fa-solid fa-triangle-exclamation text-xl"></i>Only 4 images are allowed for related Images.</span>`;
                        toast.classList.remove("hidden");
                        toast.classList.remove("translate-y-96");
                        setTimeout(() => {
                            toast.classList.add("hidden");
                            toast.classList.add("translate-y-96");
                        }, 3000)
                        return;
                    }
                    let index = 1;
                    for (const file of relatedImagesInput.files) {
                        const imageContainer = document.createElement('div');
                        imageContainer.classList.add('w-32', 'h-32', 'mx-2', 'my-4')
                        imageContainer.id = index;
                        imageContainer.innerHTML = `
                        <div class="text-end"><span class="text-white"><i id=${index} onclick="removeImage(event)" class="cursor-pointer fa-solid fa-close"></i></span></div>
                        <img class="w-full h-full rounded object-cover" src=${URL.createObjectURL(file)} alt="relatedImages">`;
                        relatedImagesPreview.appendChild(imageContainer);
                        index++;
                    }
                });


                //                 // Function to display an image preview
                //                 mainImageInput.addEventListener('change',()=>{
                //                 function displayImagePreview(file, imgElement,) {
                //                     if (file) {
                //                         imgElement.src = URL.createObjectURL(file);
                //                         imgElement.style.display = 'block';
                //                     } else {
                //                         imgElement.src = '#';
                //                         imgElement.style.display = 'none';
                //                     }
                //                 }
                // displayImagePreview();
                //                 })
            </script>
</body>

</html>